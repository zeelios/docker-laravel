version: '3'

services:
  nginx:
    image: nginx:alpine
    volumes:
      - ./Docker/8.2/nginx:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - app-volume:/var/www/adult
    ports:
      - 8080:80
      - 8081:443
    depends_on:
      - app
    networks:
      - jdk

  app:
    container_name: adult
    build:
      context: .
      dockerfile: ./Docker/8.2/Dockerfile
    volumes:
      - app-volume:/var/www/adult
    networks:
      - jdk

  mysql:
    container_name: adult-mysql
    image: mysql:latest
    ports:
      - "${FORWARD_DB_PORT:-3307}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - mysqldata:/var/lib/mysql
    healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
            retries: 3
            timeout: 5s
    networks:
      - jdk

  redis:
    image: redis:alpine

  meilisearch:
    image: getmeili/meilisearch:latest
    restart: unless-stopped
    ports:
      - "7700:7700"
    networks:
      - jdk

  certbot:
    image: certbot/certbot
    volumes:
      - ./Docker/8.2/nginx:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --nginx; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx


volumes:
  mysqldata:
  certbot-etc:
  certbot-var:
  app-volume:
  
networks:
  jdk:
    driver: bridge  
